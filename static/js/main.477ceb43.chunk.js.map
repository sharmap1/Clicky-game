{"version":3,"sources":["components/PictureCard/PictureCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["PictureCard","props","className","alt","name","src","image","onClick","clickPicture","id","Wrapper","shakeWrapper","pictures","App","state","cards","clickedArray","topScore","score","shakeit","message","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","this","map","picture","key","Component","ReactDOM","render","document","getElementById"],"mappings":"+0DAgBeA,G,YAbK,SAAAC,GAAK,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,+BACVC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,WCLjCC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAiC,SAArBD,EAAMU,aAAwB,eAAiB,WAAYV,EAAMW,Y,OCoG5FC,E,2MA/FbC,MAAQ,CACNC,QACAC,aAAc,GACdC,SAAU,EACVC,MAAO,EACPC,QAAS,QACTC,QAAS,6B,EAEXZ,aAAe,SAAAC,GAEb,IAAMY,EAAgB,EAAKC,aAAaP,GACxC,EAAKQ,SAAS,CAAER,MAAOM,IAEnB,EAAKP,MAAME,aAAaQ,SAASf,GACnC,EAAKc,SAAS,CACZL,MAAO,EACPF,aAAc,GACdI,QAAS,oEACTD,QAAS,SAGX,EAAKI,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAaS,OAAO,CAAChB,IAC9CS,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BE,QAAS,0BACTD,QAAS,UAIT,EAAKL,MAAMI,MAAQ,EAAKJ,MAAMG,UAChC,EAAKM,SAAS,CAAEN,SAAU,EAAKH,MAAMI,S,EAIzCI,aAAe,SAAAI,GACb,IAAK,IAAIC,EAAID,EAAcE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACjD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADO,EAEV,CACrCD,EAAcG,GACdH,EAAcC,IAFfD,EAAcC,GAFkC,KAE9BD,EAAcG,GAFgB,KAOnD,OAAOH,G,wEAEC,IAAD,OACP,OACE,yBAAKxB,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,kCAA8D,KAWhE,wBAAIA,UAAU,aACZ,+FAGA,uBAAGA,UAAU,SACX,0CACU+B,KAAKnB,MAAMI,MADrB,gBACyCe,KAAKnB,MAAMG,WAGtD,uBAAGf,UAAU,WACX,gCAAS+B,KAAKnB,MAAMM,WAGxB,kBAAC,EAAD,CACET,aAAcsB,KAAKnB,MAAMK,QACzBP,SAAUqB,KAAKnB,MAAMC,MAAMmB,KAAI,SAAAC,GAAO,OACpC,kBAAC,EAAD,CACE3B,aAAc,EAAKA,aACnBC,GAAI0B,EAAQ1B,GACZ2B,IAAKD,EAAQ1B,GACbL,KAAM+B,EAAQ/B,KACdE,MAAO6B,EAAQ7B,aAIrB,4BAAQJ,UAAU,UAChB,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAhB,mD,GAxFMmC,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.477ceb43.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./PictureCard.css\";\r\n\r\nconst PictureCard = props => (\r\n  <div className=\"card\">\r\n    <div className=\"img-container\">\r\n      <img\r\n        className=\"img-thumbnail img-responsive\"\r\n        alt={props.name}\r\n        src={props.image}\r\n        onClick={() => props.clickPicture(props.id)}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PictureCard;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className= {props.shakeWrapper===\"true\" ? \"wrapperShake\" : \"wrapper\"}>{props.pictures}</div>;\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport PictureCard from \"./components/PictureCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport cards from \"./cards.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.cards to the cards json array\r\n  state = {\r\n    cards,\r\n    clickedArray: [],\r\n    topScore: 0,\r\n    score: 0,\r\n    shakeit: \"false\",\r\n    message: \"CLICK an image to start! \"\r\n  };\r\n  clickPicture = id => {\r\n    // Arrange the pictures in a random manner\r\n    const shuffledArray = this.shuffleArray(cards);\r\n    this.setState({ cards: shuffledArray });\r\n    // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\r\n    if (this.state.clickedArray.includes(id)) {\r\n      this.setState({\r\n        score: 0,\r\n        clickedArray: [],\r\n        message: \"INCORRECT!! Game Over ☹️ Click an image to start again!\",\r\n        shakeit: \"true\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        clickedArray: this.state.clickedArray.concat([id]),\r\n        score: this.state.score + 1,\r\n        message: \"CORRECT !! 🙂\",\r\n        shakeit: \"false\"\r\n      });\r\n    }\r\n    // set topscore = score if score>topscore.\r\n    if (this.state.score > this.state.topScore) {\r\n      this.setState({ topScore: this.state.score });\r\n    }\r\n    // shake the wrapper if shakeit is set to true\r\n  };\r\n  shuffleArray = picturesArray => {\r\n    for (let i = picturesArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [picturesArray[i], picturesArray[j]] = [\r\n        picturesArray[j],\r\n        picturesArray[i]\r\n      ];\r\n    }\r\n    return picturesArray;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Welcome to React CLICKY Game!!</h1>{\" \"}\r\n          {/* <a href=\"http://github.com/sharmap1-Clicky-game\" className=\"git\">\r\n            github\r\n            <i\r\n              img\r\n              src=\"https://cdn3.iconfinder.com/data/icons/sociocons/256/github-sociocon.png\"\r\n              alt=\"github\"\r\n            />\r\n          </a> */}\r\n        </header>\r\n\r\n        <h3 className=\"App-intro\">\r\n          <strong>\r\n            CLICK on an image to earn points, but don't click it twice!\r\n          </strong>\r\n          <p className=\"score\">\r\n            <strong>\r\n              Score: {this.state.score} | TopScore: {this.state.topScore}\r\n            </strong>\r\n          </p>\r\n          <p className=\"message\">\r\n            <strong>{this.state.message}</strong>\r\n          </p>\r\n        </h3>\r\n        <Wrapper\r\n          shakeWrapper={this.state.shakeit}\r\n          pictures={this.state.cards.map(picture => (\r\n            <PictureCard\r\n              clickPicture={this.clickPicture}\r\n              id={picture.id}\r\n              key={picture.id} // to get rid of unique key prop warning\r\n              name={picture.name}\r\n              image={picture.image}\r\n            />\r\n          ))}\r\n        />\r\n        <footer className=\"footer\">\r\n          <div className=\"container\">\r\n            <span className=\"text-muted\">\r\n              &copy; Prasamsha Sharma - Clicky Game 2019\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}